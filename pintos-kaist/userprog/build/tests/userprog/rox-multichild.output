Kernel command line: -q -f put rox-multichild put child-rox run rox-multichild
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  209,510,400 loops/s.
hd0:0: detected 321 sector (160 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 220 sector (110 kB) disk, model "QEMU HARDDISK", serial "QM00003"
Formatting file system...done.
Boot complete.
Putting 'rox-multichild' into the file system...
Putting 'child-rox' into the file system...
Executing 'rox-multichild':
(rox-multichild) begin
(rox-multichild) open "child-rox"
Interrupt 0x0d (#GP General Protection Exception) at rip=800421fd72
 cr2=0000000000000000 error=               0
rax 6f722d646c696863 rbx 0000000000000000 rcx 0000000000000010 rdx 000000800421e996
rsp 0000008004240e70 rbp 0000008004240e80 rsi 0000000000000000 rdi 6f722d646c696863
rip 000000800421fd72 r8 0000000000000000  r9 0000000000000000 r10 0000000000000000
r11 0000000000000216 r12 000000800421cb30 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000202
es: 001b ds: 001b cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:92 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x8004217ede 0x800421c865 0x8004208ce8 0x8004209106 0x800421ec0f 0x800421e9bc 0x800421d0fd 0x800421cc7f 0x800421ca59 0x40012f 0x4003c5 0x400e66.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 288 ticks
Thread: 40 idle ticks, 239 kernel ticks, 9 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 112 reads, 478 writes
hd1:0: 220 reads, 0 writes
Console: 1824 characters output
Key